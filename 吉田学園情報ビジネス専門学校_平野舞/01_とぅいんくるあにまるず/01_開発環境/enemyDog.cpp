//-----------------------------------------------------------------------------------------------
//
// いぬ型敵の処理[enemyDog.cpp]
// Author : 平野舞
//
//-----------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------
// インクルードファイル
//-----------------------------------------------------------------------------------------------
#include "enemyDog.h"		// いぬ型敵
#include "application.h"	// アプリケーション
#include "renderer.h"		// レンダリング
#include "time.h"			// タイム
#include "TextureFileName.h"	// 画像のファイル名

//-----------------------------------------------------------------------------------------------
// 定数宣言
//-----------------------------------------------------------------------------------------------
// 幅
static const float ENEMY_DOG_WIDTH = 70.0f;
// 高さ
static const float ENEMY_DOG_HEIGHT = 60.0f;
// 移動量
static const float ENEMY_DOG_MOVING = -0.9f;
// 戻り始める時間
static const int ENEMY_RETURN_TIME = 5;

//-----------------------------------------------------------------------------------------------
// コンストラクタ
//-----------------------------------------------------------------------------------------------
CEnemyDog::CEnemyDog()
{

}

//-----------------------------------------------------------------------------------------------
// デストラクタ
//-----------------------------------------------------------------------------------------------
CEnemyDog::~CEnemyDog()
{

}

//-----------------------------------------------------------------------------------------------
// 生成
//-----------------------------------------------------------------------------------------------
CEnemyDog* CEnemyDog::Create(const D3DXVECTOR3& pos)
{
	// ポインタクラスを宣言
	CEnemyDog* pEnemyDog = new CEnemyDog;

	if (pEnemyDog != nullptr)
	{// もしnullptrではなかったら
		// 位置
		pEnemyDog->SetPosition(pos);
		// 初期化
		pEnemyDog->Init();
	}

	return pEnemyDog;
}

//-----------------------------------------------------------------------------------------------
// 初期化
//
// const D3DXVECTOR3& pos → 最初に表示する座標位置
//-----------------------------------------------------------------------------------------------
HRESULT CEnemyDog::Init()
{
	// テクスチャの設定
	CObject2D::LoadTexture(TEX_ENEMY_DOG);
	// サイズ
	CEnemy::SetSize(D3DXVECTOR3(ENEMY_DOG_WIDTH, ENEMY_DOG_HEIGHT, 0.0f));
	// 種類
	CEnemy::SetEnemyType(ENEMY_TYPE_DOG);

	CEnemy::Init();

	return S_OK;
}

//-----------------------------------------------------------------------------------------------
// 終了
//-----------------------------------------------------------------------------------------------s
void CEnemyDog::Uninit()
{
	CEnemy::Uninit();
}

//-----------------------------------------------------------------------------------------------
// 更新
//-----------------------------------------------------------------------------------------------
void CEnemyDog::Update()
{
	// 移動
	Move();

	CEnemy::Update();
}

//-----------------------------------------------------------------------------------------------
// 描画
//-----------------------------------------------------------------------------------------------
void CEnemyDog::Draw()
{
	CEnemy::Draw();
}

//-----------------------------------------------------------------------------------------------
// 1P移動
//-----------------------------------------------------------------------------------------------
void CEnemyDog::Move()
{
	// 速度の取得
	float fSpeed = CEnemy::GetSpeed();

	// 出現時間の取得
	int nAppea = CEnemy::GetAppeaTime();

	// 移動量の初期化
	D3DXVECTOR3 move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

	if (nAppea + ENEMY_RETURN_TIME <= CTime::GetInstance()->GetTime())
	{// 今の時間が規定時間よりも大きかったら
		move.x = ENEMY_DOG_MOVING;
		move.y = -fSpeed;
	}
	else
	{
		move.y = fSpeed;
	}

	// 移動量の設定
	CEnemy::SetMove(move);
}